<?xml version="1.0" encoding="UTF-8"?>
<!-- for xml compliance -->
<!-- Generated By Kolor Panotour 1.8.0 -->
<krpano version="1.0.8.14" logkey="false">
    <action name="mainloadpano">
		closepanoobjects();
		closeglobalobjects();
		ifnot(stopSequence === undefined,interruptAnimation(););
		loadpano(%1,NULL,NULL,BLEND(1));
	</action>
    <!--************** Plugins e dados KrPano *****************************************************-->
    <plugin name="data" firstPanoHasBeenPlayed="false" introImageHasBeenPlayed="false" keep="true"/>
    <!--************** Abrir a 1ª panorâmica ******************************************************-->
    <include url="virtualtour0.xml"/>
    <autorotate enabled="false"/>
    <!--************** Fontes *********************************************************************-->
    <textstyle name="DEFAULT" background="false" bold="false" border="false" effect="dropshadow(0,45,0x000000,4,2);" font="Futura" fontsize="16" italic="false" textcolor="0xffffffff"/>
    <!--************** Introduçao *****************************************************************-->
    <action name="firstloadcompleteaction">
		if(plugin[data].firstPanoHasBeenPlayed==false,
			set(plugin[data].firstPanoHasBeenPlayed,true);
			set(autorotate.enabled,true);
		);
	</action>
    <plugin name="introimage" url="virtualtourdata/graphics/introImage.jpg" align="center" onclick="hideintroimage();" onloaded="autohideintroimage();"/>
    <action name="hideintroimage">
		if(plugin[introimage].enabled,	set(plugin[introimage].enabled,false);tween(plugin[introimage].alpha, 0.0, 0.5, default, removeplugin(introimage)););
	</action>
    <action name="autohideintroimage">
		if(plugin[data].introImageHasBeenPlayed==false, 	set(plugin[introimage].alpha,0); tween(plugin[introimage].alpha,1.0,WAIT);
		set(plugin[data].introImageHasBeenPlayed,true););
	</action>
    <!--************** Logos **********************************************************************-->
    <plugin name="logo4" url="virtualtourdata/graphics/logo4.png" keep="true" align="rightbottom" x="10" y="10" width="160" height="50" handcursor="false" capture="false"/>
    <!--************** Menu ***********************************************************************-->
    <plugin name="in" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(fov_moveforce,-1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(fov_moveforce,0);" url="virtualtourdata/graphics/menu/menu0.png" width="40" x="-140" y="10"/>
    <plugin name="out" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(fov_moveforce,+1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(fov_moveforce,0);" url="virtualtourdata/graphics/menu/menu1.png" width="40" x="-100" y="10"/>
    <plugin name="left" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(hlookat_moveforce,-1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(hlookat_moveforce,0);" url="virtualtourdata/graphics/menu/menu2.png" width="40" x="-60" y="10"/>
    <plugin name="right" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(hlookat_moveforce,+1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(hlookat_moveforce,0);" url="virtualtourdata/graphics/menu/menu3.png" width="40" x="-20" y="10"/>
    <plugin name="up" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(vlookat_moveforce,-1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(vlookat_moveforce,0);" url="virtualtourdata/graphics/menu/menu4.png" width="40" x="20" y="10"/>
    <plugin name="down" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" ondown="set(vlookat_moveforce,+1);" onout="" onover="" onovercrop="0|65|65|65" onup="set(vlookat_moveforce,0);" url="virtualtourdata/graphics/menu/menu5.png" width="40" x="60" y="10"/>
    <plugin name="home" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" onclick="lookto(get(panoview.h),get(panoview.v),get(panoview.fov),smooth(100,20,50));" onout="" onover="" onovercrop="0|65|65|65" url="virtualtourdata/graphics/menu/menu6.png" width="40" x="100" y="10"/>
    <plugin name="openfs" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" onclick="set(fullscreen,true);" onout="" onover="" onovercrop="0|65|65|65" url="virtualtourdata/graphics/menu/menu7.png" width="40" x="140" y="10"/>
    <plugin name="closefs" align="bottom" crop="0|0|65|65" customColor="true" height="prop" keep="true" onclick="set(fullscreen,false);" onout="" onover="" onovercrop="0|65|65|65" url="virtualtourdata/graphics/menu/menu8.png" visible="false" width="40" x="140" y="10"/>
    <events onenterfullscreen="set(plugin[openfs].visible,false); set(plugin[closefs].visible,true);" onexitfullscreen="set(plugin[openfs].visible,true); set(plugin[closefs].visible,false);"/>
    <!--************** Plugin de Miniaturas *******************************************************-->
    <events name="thumbnailsResizeEvent" onresize="thumbsResizeEventHandler();"/>
    <!-- Ação a tomar quando o cursos passar por cima de uma miniatura -->
    <action name="magnify">
		tween(plugin[%1].alpha,  1.0, 0.3, easeInQuad);
		tween(plugin[%1].scale, 1.05, 0.3, easeInQuad);
	</action>
    <!-- Ação a tomar quando o cursos sair de cima de uma miniatura -->
    <action name="lie">
		tween(plugin[%1].alpha, 0.8, 0.3, easeInQuad);
		tween(plugin[%1].scale, 1.0, 0.3, easeInQuad);
	</action>
    <!-- abrir a miniatura -->
    <action name="slide_action_in">
		set(plugin[slide].onclick,slide_action_out);
		set(plugin[strap].onclick,slide_action_out);
		set(plugin[strapArrow].rotate,180);
		tween(plugin[thumbArray].x, 10%, 1, easeOutQuint);
		tween(plugin[thumbMovePrev].x, 5%,1, easeOutQuint);
		tween(plugin[thumbMoveNext].x, 5%, 1, easeOutQuint);
		thumbsResizeEventHandler();
	</action>
    <!-- fechar a miniatura -->
    <action name="slide_action_out">
		set(plugin[slide].onclick,slide_action_in);
		set(plugin[strap].onclick,slide_action_in);
		set(plugin[strapArrow].rotate,0);
		tween(plugin[thumbArray].x, 0, 1, easeOutQuint);
		tween(plugin[thumbMovePrev].x, 0, 1, easeOutQuint);
		tween(plugin[thumbMoveNext].x, 0, 1, easeOutQuint);
		set(plugin[thumbMovePrev].visible,false);
		set(plugin[thumbMoveNext].visible,false);
	</action>
    <action name="moveThumbsPrev">
		plugin[thumbArray].updatepos();
		copy(truethumbsheight, plugin[thumbArray].pixelheight);
		if (area.pixelheight GT truethumbsheight,
		set(plugin[thumbBgLayout].y, 0);,
		set(leftborder, get(area.pixelheight));
		sub(leftborder, truethumbsheight);
		div(leftborder, 2);
		mul(leftborder, -1);
		if (plugin[thumbBgLayout].y LT leftborder, inc(plugin[thumbBgLayout].y, %1););
		if (plugin[thumbBgLayout].y GT leftborder, set(plugin[thumbBgLayout].y, get(leftborder)););
		);
	</action>
    <action name="moveThumbsNext">
		plugin[thumbArray].updatepos();
		copy(truethumbsheight, plugin[thumbArray].pixelheight);
		if (area.pixelheight GT truethumbsheight,
		set(plugin[thumbBgLayout].y, 0);,
		set(rightborder, get(area.pixelheight));
		sub(rightborder, truethumbsheight);
		div(rightborder, 2);
		if (plugin[thumbBgLayout].y GT rightborder, dec(plugin[thumbBgLayout].y, %1););
		if (plugin[thumbBgLayout].y LT rightborder, set(plugin[thumbBgLayout].y, get(rightborder)););
		);
	</action>
    <action name="thumbsResizeEventHandler">
		plugin[thumbArray].updatepos();
		copy(truethumbsheight, plugin[thumbArray].pixelheight);
		if (area.pixelheight GT truethumbsheight,
		set(plugin[thumbBgLayout].y, 0);displayThumbsScrolls(false);,
		if (plugin[slide].onclick == slide_action_out, displayThumbsScrolls(true););
		);
	</action>
    <action name="displayThumbsScrolls">
		set(plugin[thumbMovePrev].visible, %1);
		set(plugin[thumbMovePrev].enabled, %1);
		set(plugin[thumbMoveNext].visible, %1);
		set(plugin[thumbMoveNext].enabled, %1);
	</action>
    <action name="adjusthtml5thumbsplugins">
		if (ishtml5 == true,
		set(plugin[thumbMovePrev].height, 5%);
		set(plugin[thumbMoveNext].height, 5%);
		);
	</action>
    <plugin name="thumbArray" keep="true" zorder="1" url="virtualtourdata/graphics/transparent.png" handcursor="false" capture="false" children="true" alpha="0.9" blendmode="normal" smoothing="true" x="0" y="0" scale="1" align="left" edge="right" width="10%" height="prop"/>
    <plugin name="thumbBgLayout" keep="true" zorder="1" url="virtualtourdata/graphics/transparent.png" handcursor="false" capture="false" x="0" y="0" align="center" edge="center" width="100%" height="prop" parent="thumbArray"/>
    <plugin name="thumbMovePrev" keep="true" zorder="3" capture="true" url="virtualtourdata/graphics/thumb_scroll.png" alpha="0.8" onover="set(alpha, 1);" onout="set(alpha,0.8);set(scrollspeed,10);" scrollspeed="10" onhover="moveThumbsPrev(get(scrollspeed));if(scrollspeed LT 70, inc(scrollspeed););" onclick="moveThumbsPrev(50);" visible="false" x="0" y="10" align="topleft" edge="top"/>
    <plugin name="thumbMoveNext" keep="true" zorder="3" capture="true" url="virtualtourdata/graphics/thumb_scroll.png" alpha="0.8" onover="set(alpha, 1);" onout="set(alpha,0.8);set(scrollspeed,10);" scrollspeed="10" onhover="moveThumbsNext(get(scrollspeed));if(scrollspeed LT 70, inc(scrollspeed););" onclick="moveThumbsNext(50);" visible="false" x="0" y="10" align="bottomleft" edge="bottom"/>
    <plugin name="thumbMovePrevArrow" parent="thumbMovePrev" keep="true" zorder="3" capture="false" url="virtualtourdata/graphics/arrow.png" x="0" y="0" align="center" edge="center" rotate="-90"/>
    <plugin name="thumbMoveNextArrow" parent="thumbMoveNext" keep="true" zorder="3" capture="false" url="virtualtourdata/graphics/arrow.png" x="0" y="0" align="center" edge="center" rotate="90"/>
    <plugin name="slide" parent="thumbArray" keep="true" zorder="0" url="virtualtourdata/graphics/slide.png" handcursor="false" capture="false" children="true" alpha="0.9" blendmode="normal" smoothing="true" x="0" y="0" align="right" edge="right" width="100%" height="2000" onclick="slide_action_in"/>
    <plugin name="strap" keep="true" zorder="0" url="virtualtourdata/graphics/strap.png" parent="thumbArray" alpha="0.9" align="right" edge="left" handcursor="true" onclick="slide_action_in"/>
    <plugin name="strapArrow" keep="true" parent="strap" zorder="0" url="virtualtourdata/graphics/arrow.png" align="center" edge="center" capture="false" enabled="false" rotate="0"/>
    <!-- thumbs pictures -->
    <plugin name="thumb_virtualtour0" keep="true" zorder="2" parent="thumbBgLayout" url="virtualtourdata/virtualtour0/preview.jpg" width="83.3333%" height="prop" align="topleft" edge="center" x="50%" y="26.087%" alpha="0.8" onclick="mainloadpano(virtualtour0.xml);" onover="magnify('thumb_virtualtour0'); " onhover="showtext(Living);" onout="lie('thumb_virtualtour0');" visible="false" onloaded="thumbloaded();"/>
    <plugin name="thumb_virtualtour1" keep="true" zorder="2" parent="thumbBgLayout" url="virtualtourdata/virtualtour1/preview.jpg" width="83.3333%" height="prop" align="topleft" edge="center" x="50%" y="73.913%" alpha="0.8" onclick="mainloadpano(virtualtour1.xml);" onover="magnify('thumb_virtualtour1'); " onhover="showtext(Terraço Gourmet);" onout="lie('thumb_virtualtour1');" visible="false" onloaded="thumbloaded();"/>
    <plugin name="thumbnailsData" keep="true" nbThumbnailsLoaded="0"/>
    <action name="thumbloaded">
		inc(plugin[thumbnailsData].nbThumbnailsLoaded, 1);
		if(plugin[thumbnailsData].nbThumbnailsLoaded GE 2,
		setThumbnailsVisible();
		adjusthtml5thumbsplugins();
		);
	</action>
    <action name="setThumbnailsVisible">
		set(plugin[thumb_virtualtour0].visible, true);
		set(plugin[thumb_virtualtour1].visible, true);
	</action>
    <!--************** Plugin do Mapa *************************************************************-->
    <plugin name="map" url="virtualtourdata/map/map.png" keep="true" align="righttop" x="10" y="10" width="200" height="136" handcursor="false" onloaded="hidemapspot();" onclick="openmap"/>
    <plugin keep="true" visible="false" name="mapspot0" onclick="mainloadpano(virtualtour1.xml);" url="virtualtourdata/graphics/spots/spot0.png" blingCounter="0" align="lefttop" edge="center" parent="map" x="65.9701%" y="73.6842%" width="12" height="12"/>
    <plugin keep="true" visible="false" name="mapspot1" onclick="mainloadpano(virtualtour0.xml);" url="virtualtourdata/graphics/spots/spot0.png" blingCounter="0" align="lefttop" edge="center" parent="map" x="71.9403%" y="27.6316%" width="12" height="12"/>
    <action name="showmapspot">
		set(  plugin[mapspot0].alpha  , 0);
		set(  plugin[mapspot0].visible, true);
		tween(plugin[mapspot0].alpha  , 1);
		set(  plugin[mapspot1].alpha  , 0);
		set(  plugin[mapspot1].visible, true);
		tween(plugin[mapspot1].alpha  , 1);
	</action>
    <action name="hidemapspot">
		set(plugin[mapspot0].visible,false);
		set(plugin[mapspot1].visible,false);
	</action>
    <!-- fechar o mapa -->
    <action name="closemap">
		hidemapspot();
		set(plugin[map].onclick,openmap);
		tween(plugin[map].width , 200);
		tween(plugin[map].height, 136);
	</action>
    <!-- abrir o mapa -->
    <action name="openmap">
		set(plugin[map].onclick, closemap);
		tween(plugin[map].height, 272, 0.5, easeoutquad);
		tween(plugin[map].width , 400, 0.5, easeoutquad, showmapspot(););
		set(plugin[map].align, righttop);
		set(plugin[map].x    , 10);
		set(plugin[map].y    , 10);
	</action>
    <!-- Desmarcar todos os locais do mapa excepto os usados como argumento -->
    <!-- Desmarcar todos os locais do mapa se não existir nenhum argumento -->
    <action name="unselectmapspotsbutpassed">
		if (%1 != mapspot0,
				if(plugin[mapspot0].animated,
				set(plugin[mapspot0].frame           , 0);
				set(plugin[mapspot0].ypos            , 0);
				set(plugin[mapspot0].animationCounter, 0)
				txtadd(plugin[mapspot0].crop,'0|0|',get(plugin[mapspot0].framewidth),'|',get(plugin[mapspot0].frameheight));
			,
				set(plugin[mapspot0].blingCounter, 0)
			)
		);
		resetmapspot(mapspot0);
		if (%1 != mapspot1,
				if(plugin[mapspot1].animated,
				set(plugin[mapspot1].frame           , 0);
				set(plugin[mapspot1].ypos            , 0);
				set(plugin[mapspot1].animationCounter, 0)
				txtadd(plugin[mapspot1].crop,'0|0|',get(plugin[mapspot1].framewidth),'|',get(plugin[mapspot1].frameheight));
			,
				set(plugin[mapspot1].blingCounter, 0)
			)
		);
		resetmapspot(mapspot1);
	</action>
    <!-- Selecione um local específico do mapa -->
    <action name="selectmapspot">
		unselectmapspotsbutpassed(%1);
		if(plugin[%1].animated,
			inc(plugin[%1].animationCounter, 1);
			if(plugin[%1].animationCounter == 1,
				animatemapspot(%1, 0.1);
			);
		,
			inc(plugin[%1].blingCounter,1);
			if(plugin[%1].blingCounter == 1,
				blingmapspot(%1);
			);
		);
	</action>
    <!-- fazer com que os atalhos brilhem quando selecionados (ação recorrente) -->
    <action name="blingmapspot">
		tween(plugin[%1].alpha, 0.0, 0.8, easeInSine  );
		tween(plugin[%1].scale, 1.5, 0.8, easeOutCubic);
		tween(, , 0.8, , resetmapspot(%1);
		if(plugin[%1].blingCounter &gt; 0, blingmapspot(%1);););
	</action>
    <action name="resetmapspot">
		set(plugin[%1].scale,1);
		set(plugin[%1].alpha,1);
	</action>
    <action name="closeglobalobjects">
		closemap();
		slide_action_out();
	</action>
    <!-- Raise sequence stopper and wait sequence time to break the delayed calls -->
    <action name="interruptAnimation">
		ifnot (stopSequence === undefined,
			set(stopSequence, true);
			wait(0);
		);
	</action>
</krpano>